Index: squid/configure
diff -c squid/configure:1.248.2.87 squid/configure:1.248.2.88
*** squid/configure:1.248.2.87	Sat Mar 26 14:59:01 2005
--- squid/configure	Fri Apr 22 19:32:26 2005
***************
*** 4031,4036 ****
--- 4031,4037 ----
  	errno.h \
  	execinfo.h \
  	fcntl.h \
+ 	fnmatch.h \
  	getopt.h \
  	gnumalloc.h \
  	grp.h \
Index: squid/configure.in
diff -c squid/configure.in:1.251.2.86 squid/configure.in:1.251.2.87
*** squid/configure.in:1.251.2.86	Sat Mar 26 14:58:19 2005
--- squid/configure.in	Fri Apr 22 19:32:27 2005
***************
*** 1267,1272 ****
--- 1267,1273 ----
  	errno.h \
  	execinfo.h \
  	fcntl.h \
+ 	fnmatch.h \
  	getopt.h \
  	gnumalloc.h \
  	grp.h \
Index: squid/include/autoconf.h.in
diff -c squid/include/autoconf.h.in:1.109.2.11 squid/include/autoconf.h.in:1.109.2.12
*** squid/include/autoconf.h.in:1.109.2.11	Fri Mar 25 20:00:03 2005
--- squid/include/autoconf.h.in	Fri Apr 22 19:32:27 2005
***************
*** 626,631 ****
--- 626,634 ----
  /* Define if you have the <fcntl.h> header file.  */
  #undef HAVE_FCNTL_H
  
+ /* Define if you have the <fnmatch.h> header file.  */
+ #undef HAVE_FNMATCH_H
+ 
  /* Define if you have the <getopt.h> header file.  */
  #undef HAVE_GETOPT_H
  
Index: squid/include/config.h
diff -c squid/include/config.h:1.4.2.4 squid/include/config.h:1.4.2.5
*** squid/include/config.h:1.4.2.4	Thu Mar 10 16:37:50 2005
--- squid/include/config.h	Fri Apr 22 19:32:27 2005
***************
*** 130,135 ****
--- 130,137 ----
  
  #if !defined(CACHEMGR_HOSTNAME)
  #define CACHEMGR_HOSTNAME ""
+ #else
+ #define CACHEMGR_HOSTNAME_DEFINED 1
  #endif
  
  #if SQUID_UDP_SO_SNDBUF > 16384
Index: squid/src/Makefile.am
diff -c squid/src/Makefile.am:1.16.2.10 squid/src/Makefile.am:1.16.2.11
*** squid/src/Makefile.am:1.16.2.10	Sat Sep 25 15:37:35 2004
--- squid/src/Makefile.am	Fri Apr 22 19:32:27 2005
***************
*** 91,96 ****
--- 91,97 ----
  cf_gen.$(OBJEXT): cf_gen_defines.h
  squidclient_SOURCES = client.c
  cachemgr__CGIEXT__SOURCES = cachemgr.c
+ cachemgr__CGIEXT__CFLAGS = -DDEFAULT_CACHEMGR_CONFIG=\"$(DEFAULT_CACHEMGR_CONFIG)\" $(AM_CFLAGS)
  
  EXTRA_squid_SOURCES = \
  	delay_pools.c \
***************
*** 268,277 ****
--- 269,280 ----
  	store_modules.sh \
  	repl_modules.sh \
  	mib.txt \
+ 	cachemgr.conf \
  	mime.conf.default
  
  DEFAULT_PREFIX		= $(prefix)
  DEFAULT_CONFIG_FILE     = $(sysconfdir)/squid.conf
+ DEFAULT_CACHEMGR_CONFIG = $(sysconfdir)/cachemgr.conf
  DEFAULT_MIME_TABLE	= $(sysconfdir)/mime.conf
  DEFAULT_DNSSERVER       = $(libexecdir)/`echo dnsserver | sed '$(transform);s/$$/$(EXEEXT)/'`
  DEFAULT_LOG_PREFIX	= $(localstatedir)/logs
***************
*** 360,365 ****
--- 363,374 ----
  	        echo "$(INSTALL_DATA) squid.conf.default $(DESTDIR)$(DEFAULT_CONFIG_FILE)"; \
  	        $(INSTALL_DATA) squid.conf.default $(DESTDIR)$(DEFAULT_CONFIG_FILE); \
  	fi
+ 	@if test -f $(DESTDIR)$(DEFAULT_CACHEMGR_CONFIG) ; then \
+ 	        echo "$@ will not overwrite existing $(DESTDIR)$(DEFAULT_CACHEMGR_CONFIG)" ; \
+ 	else \
+ 	        echo "$(INSTALL_DATA) $(srcdir)/cachemgr.conf $(DESTDIR)$(DEFAULT_CACHEMGR_CONFIG)"; \
+ 	        $(INSTALL_DATA) $(srcdir)/cachemgr.conf $(DESTDIR)$(DEFAULT_CACHEMGR_CONFIG); \
+ 	fi
  	$(mkinstalldirs) $(DESTDIR)$(DEFAULT_LOG_PREFIX)
  
  uninstall-local:
Index: squid/src/Makefile.in
diff -c squid/src/Makefile.in:1.225.2.22 squid/src/Makefile.in:1.225.2.23
*** squid/src/Makefile.in:1.225.2.22	Mon Apr 18 18:12:13 2005
--- squid/src/Makefile.in	Fri Apr 22 19:32:28 2005
***************
*** 186,191 ****
--- 186,192 ----
  nodist_cf_gen_HEADER = cf_gen_defines.h
  squidclient_SOURCES = client.c
  cachemgr__CGIEXT__SOURCES = cachemgr.c
+ cachemgr__CGIEXT__CFLAGS = -DDEFAULT_CACHEMGR_CONFIG=\"$(DEFAULT_CACHEMGR_CONFIG)\" $(AM_CFLAGS)
  
  EXTRA_squid_SOURCES = \
  	delay_pools.c \
***************
*** 370,380 ****
--- 371,383 ----
  	store_modules.sh \
  	repl_modules.sh \
  	mib.txt \
+ 	cachemgr.conf \
  	mime.conf.default
  
  
  DEFAULT_PREFIX = $(prefix)
  DEFAULT_CONFIG_FILE = $(sysconfdir)/squid.conf
+ DEFAULT_CACHEMGR_CONFIG = $(sysconfdir)/cachemgr.conf
  DEFAULT_MIME_TABLE = $(sysconfdir)/mime.conf
  DEFAULT_DNSSERVER = $(libexecdir)/`echo dnsserver | sed '$(transform);s/$$/$(EXEEXT)/'`
  DEFAULT_LOG_PREFIX = $(localstatedir)/logs
***************
*** 440,446 ****
  PROGRAMS = $(bin_PROGRAMS) $(libexec_PROGRAMS) $(noinst_PROGRAMS) \
  	$(sbin_PROGRAMS)
  
! am_cachemgr__CGIEXT__OBJECTS = cachemgr.$(OBJEXT)
  cachemgr__CGIEXT__OBJECTS = $(am_cachemgr__CGIEXT__OBJECTS)
  cachemgr__CGIEXT__LDADD = $(LDADD)
  cachemgr__CGIEXT__DEPENDENCIES =
--- 443,449 ----
  PROGRAMS = $(bin_PROGRAMS) $(libexec_PROGRAMS) $(noinst_PROGRAMS) \
  	$(sbin_PROGRAMS)
  
! am_cachemgr__CGIEXT__OBJECTS = cachemgr__CGIEXT_-cachemgr.$(OBJEXT)
  cachemgr__CGIEXT__OBJECTS = $(am_cachemgr__CGIEXT__OBJECTS)
  cachemgr__CGIEXT__LDADD = $(LDADD)
  cachemgr__CGIEXT__DEPENDENCIES =
***************
*** 541,547 ****
  @AMDEP_TRUE@	$(DEPDIR)/access_log.Po $(DEPDIR)/acl.Po \
  @AMDEP_TRUE@	$(DEPDIR)/asn.Po $(DEPDIR)/auth_modules.Po \
  @AMDEP_TRUE@	$(DEPDIR)/authenticate.Po $(DEPDIR)/cache_cf.Po \
! @AMDEP_TRUE@	$(DEPDIR)/cache_manager.Po $(DEPDIR)/cachemgr.Po \
  @AMDEP_TRUE@	$(DEPDIR)/carp.Po $(DEPDIR)/cbdata.Po \
  @AMDEP_TRUE@	$(DEPDIR)/cf_gen.Po $(DEPDIR)/client.Po \
  @AMDEP_TRUE@	$(DEPDIR)/client_db.Po $(DEPDIR)/client_side.Po \
--- 544,551 ----
  @AMDEP_TRUE@	$(DEPDIR)/access_log.Po $(DEPDIR)/acl.Po \
  @AMDEP_TRUE@	$(DEPDIR)/asn.Po $(DEPDIR)/auth_modules.Po \
  @AMDEP_TRUE@	$(DEPDIR)/authenticate.Po $(DEPDIR)/cache_cf.Po \
! @AMDEP_TRUE@	$(DEPDIR)/cache_manager.Po \
! @AMDEP_TRUE@	$(DEPDIR)/cachemgr__CGIEXT_-cachemgr.Po \
  @AMDEP_TRUE@	$(DEPDIR)/carp.Po $(DEPDIR)/cbdata.Po \
  @AMDEP_TRUE@	$(DEPDIR)/cf_gen.Po $(DEPDIR)/client.Po \
  @AMDEP_TRUE@	$(DEPDIR)/client_db.Po $(DEPDIR)/client_side.Po \
***************
*** 688,693 ****
--- 692,698 ----
  
  clean-sbinPROGRAMS:
  	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)
+ cachemgr__CGIEXT_-cachemgr.$(OBJEXT): cachemgr.c
  cachemgr$(CGIEXT)$(EXEEXT): $(cachemgr__CGIEXT__OBJECTS) $(cachemgr__CGIEXT__DEPENDENCIES) 
  	@rm -f cachemgr$(CGIEXT)$(EXEEXT)
  	$(LINK) $(cachemgr__CGIEXT__LDFLAGS) $(cachemgr__CGIEXT__OBJECTS) $(cachemgr__CGIEXT__LDADD) $(LIBS)
***************
*** 740,746 ****
  @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/authenticate.Po@am__quote@
  @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/cache_cf.Po@am__quote@
  @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/cache_manager.Po@am__quote@
! @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/cachemgr.Po@am__quote@
  @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/carp.Po@am__quote@
  @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/cbdata.Po@am__quote@
  @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/cf_gen.Po@am__quote@
--- 745,751 ----
  @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/authenticate.Po@am__quote@
  @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/cache_cf.Po@am__quote@
  @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/cache_manager.Po@am__quote@
! @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/cachemgr__CGIEXT_-cachemgr.Po@am__quote@
  @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/carp.Po@am__quote@
  @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/cbdata.Po@am__quote@
  @AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/cf_gen.Po@am__quote@
***************
*** 835,840 ****
--- 840,857 ----
  @AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
  @AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
  	$(COMPILE) -c `cygpath -w $<`
+ 
+ cachemgr__CGIEXT_-cachemgr.o: cachemgr.c
+ @AMDEP_TRUE@	source='cachemgr.c' object='cachemgr__CGIEXT_-cachemgr.o' libtool=no @AMDEPBACKSLASH@
+ @AMDEP_TRUE@	depfile='$(DEPDIR)/cachemgr__CGIEXT_-cachemgr.Po' tmpdepfile='$(DEPDIR)/cachemgr__CGIEXT_-cachemgr.TPo' @AMDEPBACKSLASH@
+ @AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+ 	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cachemgr__CGIEXT__CFLAGS) $(CFLAGS) -c -o cachemgr__CGIEXT_-cachemgr.o `test -f cachemgr.c || echo '$(srcdir)/'`cachemgr.c
+ 
+ cachemgr__CGIEXT_-cachemgr.obj: cachemgr.c
+ @AMDEP_TRUE@	source='cachemgr.c' object='cachemgr__CGIEXT_-cachemgr.obj' libtool=no @AMDEPBACKSLASH@
+ @AMDEP_TRUE@	depfile='$(DEPDIR)/cachemgr__CGIEXT_-cachemgr.Po' tmpdepfile='$(DEPDIR)/cachemgr__CGIEXT_-cachemgr.TPo' @AMDEPBACKSLASH@
+ @AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+ 	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cachemgr__CGIEXT__CFLAGS) $(CFLAGS) -c -o cachemgr__CGIEXT_-cachemgr.obj `cygpath -w cachemgr.c`
  CCDEPMODE = @CCDEPMODE@
  uninstall-info-am:
  install-dataDATA: $(data_DATA)
***************
*** 1165,1170 ****
--- 1182,1193 ----
  	        echo "$(INSTALL_DATA) squid.conf.default $(DESTDIR)$(DEFAULT_CONFIG_FILE)"; \
  	        $(INSTALL_DATA) squid.conf.default $(DESTDIR)$(DEFAULT_CONFIG_FILE); \
  	fi
+ 	@if test -f $(DESTDIR)$(DEFAULT_CACHEMGR_CONFIG) ; then \
+ 	        echo "$@ will not overwrite existing $(DESTDIR)$(DEFAULT_CACHEMGR_CONFIG)" ; \
+ 	else \
+ 	        echo "$(INSTALL_DATA) $(srcdir)/cachemgr.conf $(DESTDIR)$(DEFAULT_CACHEMGR_CONFIG)"; \
+ 	        $(INSTALL_DATA) $(srcdir)/cachemgr.conf $(DESTDIR)$(DEFAULT_CACHEMGR_CONFIG); \
+ 	fi
  	$(mkinstalldirs) $(DESTDIR)$(DEFAULT_LOG_PREFIX)
  
  uninstall-local:
Index: squid/src/cachemgr.c
diff -c squid/src/cachemgr.c:1.90.2.7 squid/src/cachemgr.c:1.90.2.11
*** squid/src/cachemgr.c:1.90.2.7	Fri Mar 25 19:50:51 2005
--- squid/src/cachemgr.c	Mon Apr 25 22:04:30 2005
***************
*** 125,137 ****
--- 125,145 ----
  #if HAVE_SYS_SELECT_H
  #include <sys/select.h>
  #endif
+ #if HAVE_FNMATCH_H
+ #include <fnmatch.h>
+ #endif
  
  #include <assert.h>
  
  #include "util.h"
  #include "snprintf.h"
  
+ #ifndef DEFAULT_CACHEMGR_CONFIG
+ #define DEFAULT_CACHEMGR_CONFIG "/etc/squid/cachemgr.conf"
+ #endif
+ 
  typedef struct {
+     char *server;
      char *hostname;
      int port;
      char *action;
***************
*** 180,185 ****
--- 188,195 ----
  static void reset_auth(cachemgr_request * req);
  static const char *make_auth_header(const cachemgr_request * req);
  
+ static int check_target_acl(const char *hostname, int port);
+ 
  
  static const char *
  safe_str(const char *str)
***************
*** 230,239 ****
  static void
  auth_html(const char *host, int port, const char *user_name)
  {
      if (!user_name)
  	user_name = "";
      if (!host || !strlen(host))
! 	host = "localhost";
      printf("Content-Type: text/html\r\n\r\n");
      printf("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      printf("<HTML><HEAD><TITLE>Cache Manager Interface</TITLE>\n");
--- 240,251 ----
  static void
  auth_html(const char *host, int port, const char *user_name)
  {
+     FILE *fp;
+     int need_host = 1;
      if (!user_name)
  	user_name = "";
      if (!host || !strlen(host))
! 	host = "";
      printf("Content-Type: text/html\r\n\r\n");
      printf("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      printf("<HTML><HEAD><TITLE>Cache Manager Interface</TITLE>\n");
***************
*** 244,253 ****
      printf("<HR noshade size=\"1px\">\n");
      printf("<FORM METHOD=\"POST\" ACTION=\"%s\">\n", script_name);
      printf("<TABLE BORDER=\"0\" CELLPADDING=\"10\" CELLSPACING=\"1\">\n");
!     printf("<TR><TH ALIGN=\"left\">Cache Host:</TH><TD><INPUT NAME=\"host\" ");
!     printf("size=\"30\" VALUE=\"%s\"></TD></TR>\n", host);
!     printf("<TR><TH ALIGN=\"left\">Cache Port:</TH><TD><INPUT NAME=\"port\" ");
!     printf("size=\"30\" VALUE=\"%d\"></TD></TR>\n", port);
      printf("<TR><TH ALIGN=\"left\">Manager name:</TH><TD><INPUT NAME=\"user_name\" ");
      printf("size=\"30\" VALUE=\"%s\"></TD></TR>\n", user_name);
      printf("<TR><TH ALIGN=\"left\">Password:</TH><TD><INPUT TYPE=\"password\" NAME=\"passwd\" ");
--- 256,309 ----
      printf("<HR noshade size=\"1px\">\n");
      printf("<FORM METHOD=\"POST\" ACTION=\"%s\">\n", script_name);
      printf("<TABLE BORDER=\"0\" CELLPADDING=\"10\" CELLSPACING=\"1\">\n");
!     fp = fopen("cachemgr.conf", "r");
!     if (fp == NULL)
! 	fp = fopen(DEFAULT_CACHEMGR_CONFIG, "r");
!     if (fp != NULL) {
! 	int servers = 0;
! 	char config_line[BUFSIZ];
! 	while (fgets(config_line, BUFSIZ, fp)) {
! 	    char *server, *comment;
! 	    strtok(config_line, "\r\n");
! 	    if (config_line[0] == '#')
! 		continue;
! 	    if (config_line[0] == '\0')
! 		continue;
! 	    if ((server = strtok(config_line, " \t")) == NULL)
! 		continue;
! 	    if (strchr(server, '*') || strchr(server, '[') || strchr(server, '?')) {
! 		need_host = -1;
! 		continue;
! 	    }
! 	    comment = strtok(NULL, "");
! 	    if (comment)
! 		while (*comment == ' ' || *comment == '\t')
! 		    comment++;
! 	    if (!comment || !*comment)
! 		comment = server;
! 	    if (!servers) {
! 		printf("<TR><TH ALIGN=\"left\">Cache Server:</TH><TD><SELECT NAME=\"server\">\n");
! 	    }
! 	    printf("<OPTION VALUE=\"%s\"%s>%s</OPTION>\n", server, (servers || *host) ? "" : " SELECTED", comment);
! 	    servers++;
! 	}
! 	if (servers) {
! 	    if (need_host == 1 && !*host)
! 		need_host = 0;
! 	    if (need_host)
! 		printf("<OPTION VALUE=\"\"%s>Other</OPTION>\n", (*host) ? " SELECTED" : "");
! 	    printf("</SELECT></TR>\n");
! 	}
! 	fclose(fp);
!     }
!     if (need_host) {
! 	if (need_host == 1 && !*host)
! 	    host = "localhost";
! 	printf("<TR><TH ALIGN=\"left\">Cache Host:</TH><TD><INPUT NAME=\"host\" ");
! 	printf("size=\"30\" VALUE=\"%s\"></TD></TR>\n", host);
! 	printf("<TR><TH ALIGN=\"left\">Cache Port:</TH><TD><INPUT NAME=\"port\" ");
! 	printf("size=\"30\" VALUE=\"%d\"></TD></TR>\n", port);
!     }
      printf("<TR><TH ALIGN=\"left\">Manager name:</TH><TD><INPUT NAME=\"user_name\" ");
      printf("size=\"30\" VALUE=\"%s\"></TD></TR>\n", user_name);
      printf("<TR><TH ALIGN=\"left\">Password:</TH><TD><INPUT TYPE=\"password\" NAME=\"passwd\" ");
***************
*** 530,539 ****
      if (req->action == NULL) {
  	req->action = xstrdup("");
      }
!     if (!strcmp(req->action, "authenticate")) {
  	auth_html(req->hostname, req->port, req->user_name);
  	return 0;
      }
      if ((s = socket(PF_INET, SOCK_STREAM, 0)) < 0) {
  	snprintf(buf, 1024, "socket: %s\n", xstrerror());
  	error_html(buf);
--- 586,600 ----
      if (req->action == NULL) {
  	req->action = xstrdup("");
      }
!     if (strcmp(req->action, "authenticate") == 0) {
  	auth_html(req->hostname, req->port, req->user_name);
  	return 0;
      }
+     if (!check_target_acl(req->hostname, req->port)) {
+ 	snprintf(buf, 1024, "target %s:%d not allowed in cachemgr.conf\n", req->hostname, req->port);
+ 	error_html(buf);
+ 	return 1;
+     }
      if ((s = socket(PF_INET, SOCK_STREAM, 0)) < 0) {
  	snprintf(buf, 1024, "socket: %s\n", xstrerror());
  	error_html(buf);
***************
*** 586,592 ****
      req = read_request();
      return process_request(req);
  }
- 
  static char *
  read_post_request(void)
  {
--- 647,652 ----
***************
*** 606,612 ****
      buf[len] = '\0';
      return buf;
  }
- 
  static char *
  read_get_request(void)
  {
--- 666,671 ----
***************
*** 615,621 ****
  	return NULL;
      return xstrdup(s);
  }
- 
  static cachemgr_request *
  read_request(void)
  {
--- 674,679 ----
***************
*** 638,644 ****
  	if ((q = strchr(t, '=')) == NULL)
  	    continue;
  	*q++ = '\0';
! 	if (0 == strcasecmp(t, "host") && strlen(q))
  	    req->hostname = xstrdup(q);
  	else if (0 == strcasecmp(t, "port") && strlen(q))
  	    req->port = atoi(q);
--- 696,706 ----
  	if ((q = strchr(t, '=')) == NULL)
  	    continue;
  	*q++ = '\0';
! 	rfc1738_unescape(t);
! 	rfc1738_unescape(q);
! 	if (0 == strcasecmp(t, "server") && strlen(q))
! 	    req->server = xstrdup(q);
! 	else if (0 == strcasecmp(t, "host") && strlen(q))
  	    req->hostname = xstrdup(q);
  	else if (0 == strcasecmp(t, "port") && strlen(q))
  	    req->port = atoi(q);
***************
*** 651,656 ****
--- 713,724 ----
  	else if (0 == strcasecmp(t, "operation"))
  	    req->action = xstrdup(q);
      }
+     if (req->server && !req->hostname) {
+ 	char *p;
+ 	req->hostname = strtok(req->server, ":");
+ 	if ((p = strtok(NULL, ":")))
+ 	    req->port = atoi(p);
+     }
      make_pub_auth(req);
      debug(1) fprintf(stderr, "cmgr: got req: host: '%s' port: %d uname: '%s' passwd: '%s' auth: '%s' oper: '%s'\n",
  	safe_str(req->hostname), req->port, safe_str(req->user_name), safe_str(req->passwd), safe_str(req->pub_auth), safe_str(req->action));
***************
*** 751,753 ****
--- 819,875 ----
  	"Proxy-Authorization: Basic %s\r\n", str64);
      return buf;
  }
+ 
+ static int
+ check_target_acl(const char *hostname, int port)
+ {
+     char config_line[BUFSIZ];
+     FILE *fp = NULL;
+     int ret = 0;
+     fp = fopen("cachemgr.conf", "r");
+     if (fp == NULL)
+ 	fp = fopen(DEFAULT_CACHEMGR_CONFIG, "r");
+     if (fp == NULL) {
+ #ifdef CACHEMGR_HOSTNAME_DEFINED
+ 	if (strcmp(hostname, CACHEMGR_HOSTNAME) == 0 && port == CACHE_HTTP_PORT)
+ 	    return 1;
+ #else
+ 	if (strcmp(hostname, "localhost") == 0)
+ 	    return 1;
+ 	if (strcmp(hostname, getfullhostname()) == 0)
+ 	    return 1;
+ #endif
+ 	return 0;
+     }
+     while (fgets(config_line, BUFSIZ, fp)) {
+ 	char *token = NULL;
+ 	strtok(config_line, " \r\n\t");
+ 	if (config_line[0] == '#')
+ 	    continue;
+ 	if (config_line[0] == '\0')
+ 	    continue;
+ 	if ((token = strtok(config_line, ":")) == NULL)
+ 	    continue;
+ #if HAVE_FNMATCH_H
+ 	if (fnmatch(token, hostname, 0) != 0)
+ 	    continue;
+ #else
+ 	if (strcmp(token, hostname) != 0)
+ 	    continue;
+ #endif
+ 	if ((token = strtok(NULL, ":")) != NULL) {
+ 	    int i;
+ 	    if (strcmp(token, "*") == 0);	/* Wildcard port specification */
+ 	    else if (strcasecmp(token, "any") == 0);	/* Wildcard port specification */
+ 	    else if (sscanf(token, "%d", &i) != 1)
+ 		continue;
+ 	    else if (i != port)
+ 		continue;
+ 	} else if (port != CACHE_HTTP_PORT)
+ 	    continue;
+ 	ret = 1;
+ 	break;
+     }
+     fclose(fp);
+     return ret;
+ }
Index: squid/src/cachemgr.conf
diff -c /dev/null squid/src/cachemgr.conf:1.1.2.2
*** /dev/null	Thu Jan  1 01:00:00 1970
--- squid/src/cachemgr.conf	Mon Apr 25 22:04:30 2005
***************
*** 0 ****
--- 1,13 ----
+ # This file controls which servers may be managed by
+ # the cachemgr.cgi script
+ #
+ # The file consists of one server per line on the format
+ #   hostname:port  description
+ #
+ # Specifying :port is optional. If not specified then
+ # the default proxy port is assumed. :* or :any matches
+ # any port on the target server.
+ #
+ # hostname is matched using shell filename matching, allowing
+ # * and other shell wildcards.
+ localhost
Index: squid/doc/Makefile.am
diff -c squid/doc/Makefile.am:1.1.2.4 squid/doc/Makefile.am:1.1.2.5
*** squid/doc/Makefile.am:1.1.2.4	Sat Aug 31 04:26:36 2002
--- squid/doc/Makefile.am	Mon Apr 25 22:04:30 2005
***************
*** 6,14 ****
  #  Uncomment and customize the following to suit your needs:
  #
  
  man_MANS = \
! 	squid.8
  
  EXTRA_DIST = \
! 	squid.8 \
  	debug-sections.txt
--- 6,38 ----
  #  Uncomment and customize the following to suit your needs:
  #
  
+ DEFAULT_CONFIG_FILE = $(sysconfdir)/squid.conf
+ DEFAULT_CACHEMGR_CONFIG = $(sysconfdir)/cachemgr.conf
+ DEFAULT_MIME_TABLE      = $(sysconfdir)/mime.conf
+ DEFAULT_ERROR_DIR       = $(datadir)/errors/@ERR_DEFAULT_LANGUAGE@
+ 
+ SUBSTITUTE=sed "\
+ 	s%@DEFAULT_CONFIG_FILE@%$(DEFAULT_CONFIG_FILE)%g;\
+ 	s%@DEFAULT_CACHEMGR_CONFIG@%$(DEFAULT_CACHEMGR_CONFIG)%g;\
+ 	s%@DEFAULT_ERROR_DIR@%$(DEFAULT_ERROR_DIR)%g;\
+ 	s%@DEFAULT_MIME_TABLE@%$(DEFAULT_MIME_TABLE)%g;\
+ 	"
+ 
+ squid.8: squid.8.in Makefile
+ 	$(SUBSTITUTE) < $< > $@
+ 
+ cachemgr.cgi.8: cachemgr.cgi.8.in Makefile
+ 	$(SUBSTITUTE) < $< > $@
+ 
  man_MANS = \
! 	squid.8 \
! 	cachemgr.cgi.8
  
  EXTRA_DIST = \
! 	squid.8.in \
! 	cachemgr.cgi.8.in \
  	debug-sections.txt
+ 
+ CLEANFILES = \
+ 	squid.8 \
+ 	cachemgr.cgi.8
Index: squid/doc/Makefile.in
diff -c squid/doc/Makefile.in:1.1.2.14 squid/doc/Makefile.in:1.1.2.15
*** squid/doc/Makefile.in:1.1.2.14	Fri Mar 18 17:55:41 2005
--- squid/doc/Makefile.in	Mon Apr 25 22:04:30 2005
***************
*** 123,136 ****
  install_sh = @install_sh@
  makesnmplib = @makesnmplib@
  
  man_MANS = \
! 	squid.8
  
  
  EXTRA_DIST = \
! 	squid.8 \
  	debug-sections.txt
  
  subdir = doc
  mkinstalldirs = $(SHELL) $(top_srcdir)/cfgaux/mkinstalldirs
  CONFIG_HEADER = $(top_builddir)/include/autoconf.h
--- 123,156 ----
  install_sh = @install_sh@
  makesnmplib = @makesnmplib@
  
+ DEFAULT_CONFIG_FILE = $(sysconfdir)/squid.conf
+ DEFAULT_CACHEMGR_CONFIG = $(sysconfdir)/cachemgr.conf
+ DEFAULT_MIME_TABLE = $(sysconfdir)/mime.conf
+ DEFAULT_ERROR_DIR = $(datadir)/errors/@ERR_DEFAULT_LANGUAGE@
+ 
+ SUBSTITUTE = sed "\
+ 	s%@DEFAULT_CONFIG_FILE@%$(DEFAULT_CONFIG_FILE)%g;\
+ 	s%@DEFAULT_CACHEMGR_CONFIG@%$(DEFAULT_CACHEMGR_CONFIG)%g;\
+ 	s%@DEFAULT_ERROR_DIR@%$(DEFAULT_ERROR_DIR)%g;\
+ 	s%@DEFAULT_MIME_TABLE@%$(DEFAULT_MIME_TABLE)%g;\
+ 	"
+ 
+ 
  man_MANS = \
! 	squid.8 \
! 	cachemgr.cgi.8
  
  
  EXTRA_DIST = \
! 	squid.8.in \
! 	cachemgr.cgi.8.in \
  	debug-sections.txt
  
+ 
+ CLEANFILES = \
+ 	squid.8 \
+ 	cachemgr.cgi.8
+ 
  subdir = doc
  mkinstalldirs = $(SHELL) $(top_srcdir)/cfgaux/mkinstalldirs
  CONFIG_HEADER = $(top_builddir)/include/autoconf.h
***************
*** 238,243 ****
--- 258,264 ----
  mostlyclean-generic:
  
  clean-generic:
+ 	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
  
  distclean-generic:
  	-rm -f Makefile $(CONFIG_CLEAN_FILES) stamp-h stamp-h[0-9]*
***************
*** 292,297 ****
--- 313,324 ----
  	mostlyclean mostlyclean-generic uninstall uninstall-am \
  	uninstall-info-am uninstall-man uninstall-man8
  
+ 
+ squid.8: squid.8.in Makefile
+ 	$(SUBSTITUTE) < $< > $@
+ 
+ cachemgr.cgi.8: cachemgr.cgi.8.in Makefile
+ 	$(SUBSTITUTE) < $< > $@
  # Tell versions [3.59,3.63) of GNU make to not export all variables.
  # Otherwise a system limit (for SysV at least) may be exceeded.
  .NOEXPORT:
Index: squid/doc/cachemgr.cgi.8.in
diff -c /dev/null squid/doc/cachemgr.cgi.8.in:1.1.2.1
*** /dev/null	Mon Apr 25 22:07:33 2005
--- squid/doc/cachemgr.cgi.8.in	Mon Apr 25 22:04:30 2005
***************
*** 0 ****
--- 1,49 ----
+ .TH cachemgr.cgi 8 2005-04-25 "squid 2.5.STABLE10"
+ .\" Copyright and licensing information
+ .\" goes here.
+ .SH NAME
+ cachemgr.cgi \- squid HTTP proxy manager interface
+ .SH SYNOPSIS
+ .B http://your.server/cgi-bin/cachemgr.cgi
+ .SH DESCRIPTION
+ The cache manager (cachemgr.cgi) is a CGI utility for displaying statistics
+ about the Squid HTTP proxy process as it runs. The cache manager is a
+ convenient way to manage the cache and view statistics without logging
+ into the server.
+ .SH FILES
+ .I ./cachemgr.conf
+ .br
+ .I @DEFAULT_CACHEMGR_CONFIG@
+ .RS
+ The access configuration file defining which Squid servers may
+ be managed via this cachemgr.cgi program. Each line specifies a
+ .BR server : port
+ followed by an optional description
+ .P
+ The server name may contain shell wildcard characters such as *, [] etc.
+ A quick selection dropdown menu is automatically constructed from the simple
+ server names.
+ .P
+ Specifying :port is optional. If not specified then
+ the default proxy port is assumed. :* or :any matches
+ any port on the target server.
+ .RE
+ .SH SECURITY
+ cachemgr.cgi calls the requested server on the requested port using HTTP
+ and returns a formatted version of the response. To avoid abuse it is
+ recommended to configure your web server to restrict access to the
+ cachemgr.cgi program.
+ .P
+ Configuration examples for many common web servers can be found in the
+ Squid FAQ.
+ .SH SEE ALSO
+ .BR squid "(8)"
+ .br
+ .BR "The Squid FAQ" ", Chapter 9 The Cache Manager"
+ .\" Could add the following sections:
+ .\" .SH ENVIRONMENT
+ .\" .SH DIAGNOSTICS
+ .\" .SH BUGS
+ .\" .SH AUTHOR
+ .\" .SH SEE ALSO
+ 
Index: squid/doc/squid.8
diff -c squid/doc/squid.8:1.1.2.1 squid/doc/squid.8:removed
*** squid/doc/squid.8	Tue Apr 19 16:11:11 2005
--- /dev/null	Thu Jan  1 01:00:00 1970
***************
*** 1,119 ****
- .TH squid 8 "squid version 2.0"
- .\" Copyright and licensing information
- .\" goes here.
- .SH NAME
- squid \- proxy caching server
- .SH SYNOPSIS
- .B squid
- [
- .B \-dhsvzCDFNRVYX
- ] [
- .BI \-l " facility"
- ] [
- .BI \-f " config-file"
- ] [
- \-[
- .B au
- ] 
- .I port
- ] [
- .B \-k " signal"
- ]
- .SH DESCRIPTION
- .B squid
- is a high-performance proxy caching server for web clients,
- supporting FTP, gopher, and HTTP data objects.  Unlike traditional
- caching software, 
- .B squid
- handles all requests in a single, non-blocking, I/O-driven process.
- .PP
- .B squid
- keeps meta data and especially hot objects cached in RAM, 
- caches DNS lookups, supports non-blocking DNS lookups, and implements
- negative caching of failed requests.
- .PP
- .B squid
- supports SSL, extensive access controls, and full request 
- logging.  By using the lightweight Internet Cache Protocol, 
- .B squid
- caches can be arranged in a hierarchy or mesh for additional 
- bandwidth savings.
- .PP
- .B squid
- consists of a main server program squid, a Domain Name System
- lookup program dnsserver, some optional programs for rewriting
- requests and performing authentication, and some management and client
- tools.  When squid starts up, it spawns a configurable number of
- dnsserver processes, each of which can perform a single, blocking
- Domain Name System (DNS) lookup.  This reduces the amount of time the
- cache waits for DNS lookups.
- .PP
- .B squid
- is derived from the ARPA-funded Harvest Project 
- http://harvest.cs.colorado.edu/
- .PP
- This manual page only lists the command line arguments.  For details
- on how to configure
- .B squid
- see the file 
- .BI /etc/squid/squid.conf,
- the FAQ included with the distribution
- and the documentation at the
- .B squid
- home page http://www.squid-cache.org
- .PP
- .SH OPTIONS
- .IP "-a port"
- Specify HTTP port number (default: 3128).
- .IP "-d level"
- Write debugging to stderr also.
- .IP "-f file"
- Use the given config-file instead of
- .I /etc/squid/squid.conf
- .IP -h
- Print help message.
- .IP "-k reconfigure | rotate | shutdown | interrupt | kill | debug | check | parse"
- Parse configuration file, then send signal to running copy 
- (except -k parse) and exit.
- .IP -s
- Enable logging to syslog.
- .IP "-l facility"
- Use specified syslog facility. implies -s
- .IP "-u port"
- Specify ICP port number (default: 3130), disable with 0.
- .IP -v
- Print version.
- .IP -z
- Create swap directories
- .IP -C
- Do not catch fatal signals.
- .IP -D
- Disable initial DNS tests.
- .IP -F
- Don't serve any requests until store is rebuilt.
- .IP -N
- No daemon mode.
- .IP -R
- Do not set REUSEADDR on port.
- .IP -V
- Virtual host httpd-accelerator.
- .IP -X
- Force full debugging.
- .IP -Y
- Only return UDP_HIT or UDP_MISS_NOFETCH during fast reload.   
- .SH FILES
- .I /etc/squid/squid.conf
- .RS
- The main configuration file.  You must initially make 
- changes to this file for 
- .B squid
- to work.  For example, the default configuration does not 
- allow access from any browser.
- 
- .\" Could add the following sections:
- .\" .SH ENVIRONMENT
- .\" .SH DIAGNOSTICS
- .\" .SH BUGS
- .\" .SH AUTHOR
- .\" .SH SEE ALSO
- 
--- 0 ----
Index: squid/doc/squid.8.in
diff -c /dev/null squid/doc/squid.8.in:1.1.2.1
*** /dev/null	Thu Jan  1 01:00:00 1970
--- squid/doc/squid.8.in	Mon Apr 25 22:04:30 2005
***************
*** 0 ****
--- 1,147 ----
+ .TH squid 8 2005-04-25 "squid 2.5.STABLE10"
+ .\" Copyright and licensing information
+ .\" goes here.
+ .SH NAME
+ squid \- proxy caching server
+ .SH SYNOPSIS
+ .B squid
+ [
+ .B \-dhsvzCDFNRVYX
+ ] [
+ .BI \-l " facility"
+ ] [
+ .BI \-f " config-file"
+ ] [
+ \-[
+ .B au
+ ] 
+ .I port
+ ] [
+ .B \-k " signal"
+ ]
+ .SH DESCRIPTION
+ .B squid
+ is a high-performance proxy caching server for web clients,
+ supporting FTP, gopher, and HTTP data objects.  Unlike traditional
+ caching software, 
+ .B squid
+ handles all requests in a single, non-blocking, I/O-driven process.
+ .PP
+ .B squid
+ keeps meta data and especially hot objects cached in RAM, 
+ caches DNS lookups, supports non-blocking DNS lookups, and implements
+ negative caching of failed requests.
+ .PP
+ .B squid
+ supports SSL, extensive access controls, and full request 
+ logging.  By using the lightweight Internet Cache Protocol, 
+ .B squid
+ caches can be arranged in a hierarchy or mesh for additional 
+ bandwidth savings.
+ .PP
+ .B squid
+ consists of a main server program squid, a Domain Name System
+ lookup program dnsserver, some optional programs for rewriting
+ requests and performing authentication, and some management and client
+ tools.  When squid starts up, it spawns a configurable number of
+ dnsserver processes, each of which can perform a single, blocking
+ Domain Name System (DNS) lookup.  This reduces the amount of time the
+ cache waits for DNS lookups.
+ .PP
+ .B squid
+ is derived from the ARPA-funded Harvest Project 
+ http://harvest.cs.colorado.edu/
+ .PP
+ This manual page only lists the command line arguments.  For details
+ on how to configure
+ .B squid
+ see the file 
+ .BI @DEFAULT_CONFIG_FILE@,
+ the Squid FAQ and the documentation at the
+ .B squid
+ home page http://www.squid-cache.org
+ .PP
+ .SH OPTIONS
+ .IP "-a port"
+ Specify HTTP port number (default: 3128).
+ .IP "-d level"
+ Write debugging to stderr also.
+ .IP "-f file"
+ Use the given config-file instead of
+ .I @DEFAULT_CONFIG_FILE@
+ .IP -h
+ Print help message.
+ .IP "-k reconfigure | rotate | shutdown | interrupt | kill | debug | check | parse"
+ Parse configuration file, then send signal to running copy 
+ (except -k parse) and exit.
+ .IP -s
+ Enable logging to syslog.
+ .IP "-l facility"
+ Use specified syslog facility. implies -s
+ .IP "-u port"
+ Specify ICP port number (default: 3130), disable with 0.
+ .IP -v
+ Print version.
+ .IP -z
+ Create swap directories
+ .IP -C
+ Do not catch fatal signals.
+ .IP -D
+ Disable initial DNS tests.
+ .IP -F
+ Don't serve any requests until store is rebuilt.
+ .IP -N
+ No daemon mode.
+ .IP -R
+ Do not set REUSEADDR on port.
+ .IP -V
+ Virtual host httpd-accelerator.
+ .IP -X
+ Force full debugging.
+ .IP -Y
+ Only return UDP_HIT or UDP_MISS_NOFETCH during fast reload.   
+ .SH FILES
+ .I @DEFAULT_CONFIG_FILE@
+ .RS
+ The main configuration file.  You must initially make 
+ changes to this file for 
+ .B squid
+ to work.  For example, the default configuration does not 
+ allow access from any browser.
+ .RE
+ 
+ .I @DEFAULT_CONFIG_FILE@.default
+ .RS
+ Reference copy of the configuration file. Always kept up to date with
+ the version of Squid you are using. Use this to look up configuration
+ syntax after upgrading.
+ .RE
+ 
+ .I @DEFAULT_MIME_TABLE@ (mime_table)
+ .RS
+ MIME type mappings for FTP gatewaying
+ .RE
+ 
+ .I @DEFAULT_ERROR_DIR@ (error_directory)
+ .RS
+ Error page templates
+ .RE
+ 
+ .SH SEE ALSO
+ .BR cachemgr.cgi "(8), "
+ .BR pam_auth "(8), "
+ .BR squid_ldap_auth "(8), "
+ .BR squid_ldap_group "(8), "
+ .BR squid_unix_group "(8), "
+ .br
+ .B The Squid FAQ
+ 
+ 
+ 
+ .\" Could add the following sections:
+ .\" .SH ENVIRONMENT
+ .\" .SH DIAGNOSTICS
+ .\" .SH BUGS
+ .\" .SH AUTHOR
+ .\" .SH SEE ALSO
+ 
